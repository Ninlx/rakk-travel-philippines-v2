/* function myFunction() {
  const inputPass = document.getElementById("inputPass"),
    hide1 = document.getElementById("hide-1"),
    hide2 = document.getElementById("hide-2");
  "password" === inputPass.type
    ? ((inputPass.type = "text"),
      (hide1.style.display = "block"),
      (hide2.style.display = "none"))
    : ((inputPass.type = "password"),
      (hide1.style.display = "none"),
      (hide2.style.display = "block"));
} */

function myFunction() {
  const inputPass = document.getElementById("inputPass");
  const hide1 = document.getElementById("hide-1");
  const hide2 = document.getElementById("hide-2");
  if ("password" === inputPass.type) {
    inputPass.type = "text";
    hide1.style.display = "block";
    hide2.style.display = "none";
  } else {
    inputPass.type = "password";
    hide1.style.display = "none";
    hide2.style.display = "block";
  }
}

/* const darkmodeBtn = document.getElementById("dark-mode-btn"),
  body = document.querySelector("body");
function darkTheme() {
  body.classList.contains("dark-theme")
    ? (body.classList.remove("dark-theme"),
      localStorage.setItem("theme", "light"),
      darkmodeBtn.classList.remove("fa-sun"))
    : (body.classList.add("dark-theme"),
      localStorage.setItem("theme", "dark"),
      darkmodeBtn.classList.add("fa-sun"));
} "dark" === localStorage.getItem("theme") &&
  (body.classList.add("dark-theme"), darkmodeBtn.classList.add("fa-sun")); */

const darkmodeBtn = document.getElementById("dark-mode-btn");
const body = document.querySelector("body");
function darkTheme() {
  if (body.classList.contains("dark-theme")) {
    body.classList.remove("dark-theme");
    localStorage.setItem("theme", "light");
    darkmodeBtn.classList.remove("fa-sun");
  } else {
    body.classList.add("dark-theme");
    localStorage.setItem("theme", "dark");
    darkmodeBtn.classList.add("fa-sun");
  }
}
if ("dark" === localStorage.getItem("theme")) {
  body.classList.add("dark-theme");
  darkmodeBtn.classList.add("fa-sun");
}
function updateStrengthMeter() {
  const e = calPasswordStrength(inputPass.value);
  let t = 100;
  (reasonsWrapper.innerHTML = ""),
    e.forEach((e) => {
      if (null == e) return;
      t -= e.deduction;
      const s = document.createElement("div");
      (s.innerText = e.message), reasonsWrapper.appendChild(s);
    }),
    strengthMeter.style.setProperty("--strength", t);
}
function calPasswordStrength(e) {
  const t = [];
  return (
    t.push(lenghthWeakness(e)),
    t.push(lowercaseWeakness(e)),
    t.push(uppercaseWeakness(e)),
    t.push(numberWeakness(e)),
    t.push(specialCharacterWeakness(e)),
    t
  );
}
function lenghthWeakness(e) {
  const t = e.length;
  return t <= 7
    ? { message: "Your password is too short", deduction: 30 }
    : t <= 11
    ? { message: "Your password could be longer", deduction: 15 }
    : void 0;
}
function uppercaseWeakness(e) {
  return characterTypeWeakness(e, /[A-Z]/g, "uppercase characters");
}
function lowercaseWeakness(e) {
  return characterTypeWeakness(e, /[a-z]/g, "lowercase characters");
}
function specialCharacterWeakness(e) {
  return characterTypeWeakness(e, /[^0-9a-zA-Z]/g, "special characters");
}
function numberWeakness(e) {
  const t = e.match(/[0-9]/g);
  return t <= 0
    ? { message: "Your password has no numbers", deduction: 25 }
    : t <= 2
    ? { message: "Your password could use at least two numbers", deduction: 10 }
    : void 0;
}
function characterTypeWeakness(e, t, s) {
  const a = e.match(t) || [];
  return 0 === a.length
    ? { message: `Your password has no ${s}`, deduction: 15 }
    : a.length <= 0
    ? { message: `Your password could use at least 2 ${s}`, deduction: 5 }
    : void 0;
}
function select(e) {
  let t = e.textContent;
  input.value = t;
}
function showSugg(e) {
  let t;
  if (e.length)
    if (e.length >= 7) {
      let a = 7,
        r = [];
      for (var s = 0; s < a; s++) r.push(e[s]);
      t = r.join("");
    } else t = e.join("");
  else (inputValue = input.value), (t = "<li>" + inputValue);
  suggBox.innerHTML = t;
}
function count() {
  var e = setInterval(function () {
    var t = parseInt($(".load-count").text());
    $(".load-count").text((++t).toString()),
      100 === t &&
        (clearInterval(e),
        $(".load-count").addClass("hide"),
        $(".loader").addClass("active"));
  }, 25);
}
function validateTextarea() {
  var e =
      "This question is invalid! Please don't use special characters and fill out this field or else I'll kiss you! (NOTE:) This error message is only for girls. If you're a guy please disregard this message. Thank You :)",
    t = this,
    s = new RegExp("^" + $(t).attr("pattern") + "$");
  $.each($(this).val().split("\n"), function () {
    var a = !this.match(s);
    return (
      "function" == typeof t.setCustomValidity
        ? t.setCustomValidity(a ? e : "")
        : ($(t).toggleClass("error", !!a),
          $(t).toggleClass("ok", !a),
          a ? $(t).attr("title", e) : $(t).removeAttr("title")),
      !a
    );
  });
}
$(document).on("click", ".navbar ul li", function () {
  $(this).addClass("active").siblings().removeClass("active");
}),
  $(document).ready(function () {
    $("#hamburger-menu").click(function () {
      $(this).toggleClass("open"),
        $(".navbar").toggleClass("active"),
        $("#search-btn").removeClass("active"),
        $(".search-container").removeClass("active"),
        $("#user-btn").removeClass("active"),
        $(".login-container").removeClass("active");
    });
  }),
  $(document).ready(function () {
    $(".navbar").click(function () {
      $(this).removeClass("active"), $("#hamburger-menu").removeClass("open");
    });
  }),
  (window.onscroll = () => {
    hamburger.classList.remove("open"),
      (menuOpen = !1),
      navbar.classList.remove("active");
    const e = document.querySelector(".header");
    e.classList.toggle("sticky", window.scrollY > 0),
      window.scrollY > 100
        ? document.getElementById("scroller").classList.add("scroll")
        : document.getElementById("scroller").classList.remove("scroll");
  });
const searchbtn = document.querySelector("#search-btn"),
  seachcontainer = document.querySelector(".search-container"),
  hamburger = document.getElementById("hamburger-menu"),
  navbar = document.querySelector(".navbar");
searchbtn.addEventListener("click", () => {
  searchbtn.classList.toggle("active"),
    seachcontainer.classList.toggle("active"),
    hamburger.classList.remove("open"),
    navbar.classList.remove("active"),
    (menuOpen = !1),
    userbtn.classList.remove("active"),
    logincontainer.classList.remove("active");
});
const userbtn = document.querySelector("#user-btn"),
  logincontainer = document.querySelector(".login-container");
userbtn.addEventListener("click", () => {
  userbtn.classList.toggle("active"),
    logincontainer.classList.toggle("active"),
    searchbtn.classList.remove("active"),
    seachcontainer.classList.remove("active"),
    hamburger.classList.remove("open"),
    navbar.classList.remove("active");
});
const strengthMeter = document.getElementById("strength-meter"),
  reasonsWrapper = document.getElementById("reasons"),
  inputPass = document.getElementById("inputPass");
inputPass.addEventListener("input", updateStrengthMeter), updateStrengthMeter();
var swiper = new Swiper(".home-slider", {
  loop: !0,
  grabCursor: !0,
  autoplay: { delay: 7e3, disableOnInteraction: !1 },
  navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" },
});
let loadmore = document.querySelector(".package .load-more .btn"),
  currentItem = 3;
loadmore.onclick = () => {
  let e = [...document.querySelectorAll(".package .box-container .box")];
  for (var t = currentItem; t < currentItem + 3; t++)
    (e[t].style.display = "inline-block"),
      AOS.init({ offset: 10, duration: 1700 });
  (currentItem += 3),
    currentItem >= e.length && (loadmore.style.display = "none");
};
const clickyMenu = new Audio();
(clickyMenu.src = "sounds/double.wav"),
  AOS.init({
    offset: 10,
    duration: 1700,
    disable: !1,
    startEvent: "DOMContentLoaded",
    initClassName: "aos-init",
    animatedClassName: "aos-animate",
    useClassNames: !1,
    disableMutationObserver: !1,
    debounceDelay: 50,
    throttleDelay: 99,
    delay: 0,
    easing: "ease",
    once: !1,
    mirror: !1,
    anchorPlacement: "top-bottom",
  });
const searchBox = document.querySelector(".search-box"),
  input = searchBox.querySelector("input"),
  suggBox = searchBox.querySelector(".search-sugg-box");
(input.onkeyup = (e) => {
  let t = e.target.value,
    s = [];
  if (t) {
    (s = sugg.filter((e) =>
      e.toLocaleLowerCase().startsWith(t.toLocaleLowerCase())
    )),
      (s = s.map((e) => "<li>" + e + "<a>")),
      console.log(s),
      searchBox.classList.add("active"),
      showSugg(s);
    let e = suggBox.querySelectorAll("li");
    for (let t = 0; t < e.length; t++)
      e[t].setAttribute("onclick", "select(this)");
  } else searchBox.classList.remove("active");
}),
  (swiper = new Swiper(".feedback-swiper", {
    effect: "coverflow",
    loop: !0,
    autoplay: { delay: 6e3, disableOnInteraction: !1 },
    grabCursor: !0,
    centeredSlides: !0,
    slidesPerView: "2",
    spaceBetween: 100,
    coverflowEffect: {
      rotate: 30,
      stretch: 0,
      depth: 100,
      modifier: 1,
      slideShadows: !0,
    },
    pagination: { el: ".swiper-pagination", clickable: !0 },
    breakpoints: {
      320: { slidesPerView: 1, spaceBetween: 20 },
      480: { slidesPerView: 1, spaceBetween: 30 },
      640: { slidesPerView: 2, spaceBetween: 40 },
      768: { slidesPerView: 2, spaceBetween: 50 },
      991: { slidesPerView: 2, spaceBetween: 60 },
      1200: { slidesPerView: 2, spaceBetween: 70 },
      1366: { slidesPerView: 3, spaceBetween: 80 },
      1440: { slidesPerView: 3, spaceBetween: 90 },
      1920: { slidesPerView: 4, spaceBetween: 100 },
    },
  })),
  count(),
  $("#messageField").keyup(validateTextarea),
  $(document).ready(function () {
    var e = "Please match the requested format.";
    $(this)
      .find("textarea")
      .on("input change propertychange", function () {
        var t = $(this).attr("pattern");
        if (void 0 !== t && !1 !== t) {
          var s = new RegExp("^" + t.replace(/^\^|\$$/g, "") + "$", "g");
          (hasError = !$(this).val().match(s)),
            "function" == typeof this.setCustomValidity
              ? this.setCustomValidity(hasError ? e : "")
              : ($(this).toggleClass("error", !!hasError),
                $(this).toggleClass("ok", !hasError),
                hasError
                  ? $(this).attr("title", e)
                  : $(this).removeAttr("title"));
        }
      });
  });
